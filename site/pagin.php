		<?php
			// Ограничиваем количество ссылок, которые будут выводиться перед и
			// после текущей страницы
			$limit=3;

			// Если значение page= не является числом, то показываем
			// пользователю первую страницу
			if(!is_numeric($page))
				$page=1;

			// Если пользователь вручную поменяет в адресной строке значение page= на нуль,
			// то мы определим это и поменяем на единицу, то-есть отправим на первую
			// страницу, чтобы избежать ошибки
			if ($page<1) $page=1;

			// Узнаем количество всех доступных записей 

			$res = $link->query("SELECT * FROM " . $table . ";");
			$num = $res->num_rows;

			// Вычисляем количество страниц, чтобы знать сколько ссылок выводить
			$pages = $num/$rows;

			// Округляем полученное число страниц в большую сторону
			$pages = ceil($pages);

			// Здесь мы увеличиваем число страниц на единицу чтобы начальное значение было
			// равно единице, а не нулю. Значение page= будет
			// совпадать с цифрой в ссылке, которую будут видеть посетители
			$pages++; 

			// Если значение page= больше числа страниц, то выводим первую страницу
			if ($page>$pages) 
				$page = 1;

			// Выводим заголовок с номером текущей страницы 
			echo '<strong >page #' . $page . 
			'</strong><br /><br />'; 

			// Переменная $list указывает с какой записи начинать выводить данные.
			// Если это число не определено, то будем выводить
			// с самого начала, то-есть с нулевой записи
			if (!isset($list)) $list=0;

			// Чтобы у нас значение page= в адресе ссылки совпадало с номером
			// страницы мы будем его увеличивать на единицу при выводе ссылок, а
			// здесь наоборот уменьшаем чтобы ничего не нарушить.
			$list=--$page*$rows;

			echo $list;

			// Делаем запрос подставляя значения переменных $quantity и $list
			$res2 = $link->query("SELECT * FROM " . $table . " LIMIT " . $rows . " OFFSET " . $list . ";");
			$num = $res2->num_rows;

			// Выводим все записи текущей страницы
			for ($j = 0; $j < $num; $j++) 
			{
				$row = $res2->fetch_assoc() ;

				echo '<tr>'	;
					for($i = 0; $i < $cols; $i++)
					{
						echo '<th class="font-weight-normal">';
							echo $row[$print_fields[$i]];
						echo '</th>';
					}
				echo '</tr>';
				////
			}

			echo 'pages: ';

			// На данном этапе номер текущей страницы = $page+1
			$cur = $page+1;

			// Узнаем с какой ссылки начинать вывод
			$start = $cur-$limit;

			// Узнаем номер последней ссылки для вывода
			$end = $cur+$limit;

			// Выводим ссылки на все страницы
			// Начальное число $j в нашем случае должно равнятся единице, а не нулю
			for ($j = 1; $j<$pages; $j++) {

				// Выводим ссылки только в том случае, если их номер больше или равен
				// начальному значению, и меньше или равен конечному значению
				if ($j>=$start && $j<=$end) {

					// Ссылка на текущую страницу выделяется жирным
					if ($j==($page+1)) 
						echo '<a href="' . $_SERVER['SCRIPT_NAME'] . 
							'?page=' . $j . '"><strong style="color: #df0000">' . $j . 
								'</strong></a> &nbsp; ';

					// Ссылки на остальные страницы
					else 
						echo '<a href="' . $_SERVER['SCRIPT_NAME'] . '?page=' . 
							$j . '">' . $j . '</a> &nbsp; ';
				}
			}

			// Выводим ссылки "вперед" и "на последнюю страницу"
			if ($j>$page && ($page+2)<$j) {

				// Чтобы попасть на следующую страницу нужно увеличить $pages на 2
				echo '<a href="' . $_SERVER['SCRIPT_NAME'] . '?page=' . ($page+2) . 
				'"> ></a> &nbsp; ';

				// Так как у нас $j = количество страниц + 1, то теперь 
				// уменьшаем его на единицу и получаем ссылку на последнюю страницу
				echo '<a href="' . $_SERVER['SCRIPT_NAME'] . '?page=' . ($j-1) . 
				'">>></a> &nbsp; ';
			}
		?>
